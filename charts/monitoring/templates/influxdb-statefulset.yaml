apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: influxdb
{{ include "common.labels" . | indent 4 }}
  name: influxdb
  namespace: {{ dig "global" "monitoring" "namespace" .Release.Namespace (.Values | merge (dict)) | quote }}
spec:
  serviceName: influxdb
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      name: influxdb
      labels:
        app: influxdb
      annotations:
        {{- if .Values.global.podAnnotations }}
        {{ toYaml .Values.global.podAnnotations | default "" | nindent 8 }}
        {{- end }}
        {{- if .Values.influxdb.podAnnotations }}
        {{ toYaml .Values.influxdb.podAnnotations | default "" | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.affinity }}
      affinity:
        {{ toYaml .Values.affinity | default "" | nindent 8 }}
      {{- end }}
      containers:
        - image: {{ .Values.influxdb.image }}
          name: influxdb
          env:
            - name: {{ .Values.influxdb.loglevel| quote }}
              value: info
          ports:
            - containerPort: 8086
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/influxdb
              name: influxdb-claim
          livenessProbe:
            httpGet:
              path: /ping
              port: 8086
            initialDelaySeconds: 90
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /ping
              port: 8086
            initialDelaySeconds: 20
            periodSeconds: 15
            timeoutSeconds: 5        
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: influxdb-claim
    spec:
      accessModes: ["ReadWriteOnce"]
      {{- if .Values.storageClassName }}
      storageClassName: {{ .Values.storageClassName }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.influxdb.storage }}
