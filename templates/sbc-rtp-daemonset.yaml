{{- if not .Values.sbc.rtp.statefulset.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{ .Release.Namespace | quote }}
  name: jambonz-sbc-rtp
  labels:
    app: jambonz-sbc-rtp
{{ include "common.labels" . | indent 4 }}
  annotations:
    "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
spec:
  selector:
    matchLabels:
      app: jambonz-sbc-rtp
  template:
    metadata:
      labels:
        app: jambonz-sbc-rtp
    spec:
      {{- if .Values.global.affinity }}
      affinity:
        {{ toYaml .Values.global.affinity | default "" | nindent 8 }}
      {{- end }}
      nodeSelector:
        {{ .Values.sbc.rtp.nodeSelector.label }}: {{.Values.sbc.rtp.nodeSelector.value | quote }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
        - key: {{ .Values.sbc.rtp.toleration | quote }}
          operator: "Exists"
          effect: "NoSchedule"
{{- if .Values.sbc.rtp.serviceAccountName }}
      serviceAccountName: {{ .Values.sbc.rtp.serviceAccountName | quote }}
{{- end }}
      volumes:
{{- if .Values.sbc.rtp.extraVolumes }}
{{ toYaml .Values.sbc.rtp.extraVolumes | default "" | nindent 8 }}
{{- end }}
      initContainers:
        - image: kanisterio/mysql-sidecar:0.40.0
          name: db-create-wait
          command:
            - sh 
            - -c 
            - |
              until mysql -u {{ .Values.mysql.user }} -D {{ .Values.mysql.database }} -h mysql.{{ default .Release.Namespace .Values.global.db.namespace }} -p${MYSQL_PASSWORD} --protocol=tcp -e "select count(*) from accounts";
              do 
                sleep 5
              done
          env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jambonz-secrets
                  key: MYSQL_PASSWORD
{{- if .Values.sbc.rtp.extraInitContainers }}
{{ toYaml .Values.sbc.rtp.extraInitContainers | default "" | nindent 8 }}
{{- end }}
      containers:
        - name: rtpengine-sidecar
          image: {{ .Values.rtpengine.sidecarImage }}
          imagePullPolicy:  {{ .Values.rtpengine.sidecarImagePullPolicy }}
          env:
            - name: NODE_ENV
              value: production
            - name: K8S 
              value: "1"
            - name: JAMBONES_LOGLEVEL
              value: debug
            - name: JAMBONES_REDIS_HOST
              value: redis.{{ default .Release.Namespace .Values.global.db.namespace }}
            - name: JAMBONES_REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            - name: RTPENGINE_DTMF_LOG_PORT
              value: {{ .Values.rtpengine.dtmfLogPort | quote }}
            - name: RTPENGINE_URL
              value: {{ .Values.rtpengine.wsUrl | quote }}
            - name: ENABLE_METRICS
              value: {{ default "0" .Values.stats.enabled  | quote }}
            {{- if .Values.stats.enabled }}
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STATS_HOST
              value: {{ .Values.stats.host }}.{{ default .Release.Namespace .Values.global.monitoring.namespace }}
            - name: STATS_PORT
              value: {{ .Values.stats.port  | quote }}
            - name: STATS_TAGS
              value: "pod:$(K8S_POD_NAME)"
            - name: STATS_PROTOCOL
              value: {{ .Values.stats.protocol }}
            - name: STATS_TELEGRAF
              value: "1"
            - name: STATS_SAMPLE_RATE
              value:  {{ .Values.stats.sampleRate | quote }}
            {{- end }}
        - name: rtpengine 
          image: {{ .Values.rtpengine.image }}
          imagePullPolicy: {{ .Values.rtpengine.imagePullPolicy }}
          args: 
            - rtpengine
            - --listen-udp=22222
            - --listen-http=22222
            - --homer
            - heplify-server.{{ default .Release.Namespace .Values.global.monitoring.namespace }}:9060
            - --homer-protocol
            - udp
            - --homer-id
            - {{ .Values.rtpengine.homerId | quote }}
            - --log-level
            - {{ default 5 .Values.rtpengine.loglevel | quote }}
            {{- if .Values.global.recordings.enabled }}
            - --recording-method
            - {{ .Values.rtpengine.recordings.method }}
            - --recording-dir
            - {{ .Values.rtpengine.recordings.dir | quote }}
            {{- end }}
          env:
            - name: CLOUD 
              value: {{ required "cloud provider name" .Values.cloud | quote }}
            - name: IMDSv2
              value: {{ .Values.awsUseIMDSv2 | quote }}
            - name: DRACHTIO_SECRET
              valueFrom:
                secretKeyRef:
                  name: jambonz-secrets
                  key: DRACHTIO_SECRET
          {{- if .Values.global.recordings.enabled }}
          volumeMounts:
            - mountPath: {{ .Values.rtpengine.recordings.dir | quote }}
              name: recordings
          {{- end }}
          ports:
            - containerPort: 22222
              protocol: TCP
{{- if .Values.sbc.rtp.extraContainers }}
{{ toYaml .Values.sbc.rtp.extraContainers | default "" | nindent 8 }}
{{- end }}
      {{- if .Values.global.recordings.enabled }}
      volumes:
      - name: recordings
        persistentVolumeClaim:
          claimName: {{ .Values.rtpengine.recordings.pvc | quote }}
      {{- end }}
      restartPolicy: Always
{{- end }}
